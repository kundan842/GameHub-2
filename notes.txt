implememnting react query and global statemanagement and react router in gamehub project
=>  npm i @tanstack/react-query@4.28
=>  npm i @tanstack/react-query-devtools@4.28
========================================================================
          fetcing generes  and plateforms using query client
  =>  useQuery({
        queryKey:['plateforms'],
        queryFn: () => apiClient.get<FetchResponse<Plateform>>('/plateforms/lists/parents')
                    .then(res => res.data),
        staleTime:24*60*60*1000, // 24h,
        // initialData:{results:[],}

    })

    => here we can pass initialData for static conetent so till the stale time 
    no call will be made to server and those data will be used
    ===================================================================================
    => shift+ctrl+p to open the command pallate 
    => from command pallet organize the import, build application
    => before removing any exported function ,get the refrence of exported function
================================================================================================================
implement infinite queries for game 
=> for infite query react query have useInfiniteQuery hook using it we can create create a "Load More" UI 
=> in query function , queryFn: ( {pageParam = 1 }) => apiClient.getAll({
    react query passes pageno so destructure it it as pageParam and initilize it to 1 
    so for first time first page data is loaded
=> rawg api supports data pagination , https://api.rawg.io/docs/#operation/games_list
=> other then data , error and isLoading supported by Rect useQuery, infinite query supports additional
function isFetchingNextPage, fetchNextPage, hasNextPage
=========================================================================================================
                                infinite scroling in game component
=>   npm install --save react-infinite-scroll-component
=> <InfiniteScroll
      dataLength={totalFetchedGames}
      hasMore={!!hasNextPage}
      next={() => fetchNextPage()}
      loader={<Spinner></Spinner>}
    >
=> doc: https://www.npmjs.com/package/react-infinite-scroll-component
    => here !! convert value to boolean value
  ===  ================================================================================================= 
                picking the right statemanagement
=> in app.tsx, the logic of managin stae is spraed all over the place, and there is prop drilling
like from app passoig onSearch method to navBar component , from navebar passign onSearch metod to Search component
=> so we can use centralize stae management using reducer and share the state using React context
=> but the drawback with using react contetxt is that if any value changees , which is being shared using contetxt
then all the component using, that context will re render
=> so to avoid the rerendering  need to use the State Management libreries
    1.Redux
    2.Mobx
    3.Recoil
    4.XState
    5.Zustand
=> so wil be using the Zustand to manage the client state
=> first create the Zustand store , which will store the GameQury obejct
=> and that gameQuery can be shared easily , without passoing Sto each compoemnt indivisually
=> so in compoenent no need to use the state hook just use the zustand to 
manage state

=> npm i zustand@4.3.7
=> so using zustand we centarlized the state mangement , data sharing and avoided props drilling
=> so all compoemnt get shared data from single zustand store
=> but these command cannot resused directly into other projects
=> so choose between data passing as props or using librery as zustand depends 
on project need , there is not one fit
=============================================================================================================================================
                    Setting up routing
=> npm i react-router-dom@6.10.0
=>  {isRouteErrorResponse(error) this diffrenciated between route error or application error
=> add   errorElement: <ErrorPage></ErrorPage> to root route element
=================================================================================
    getting details of game and showing
=> https://api.rawg.io/docs/#operation/games_read
==============================================================================================
 building game attribute like like plateforms, publisher etc
 => so it will have term and decription
 => html has dt (detail term) and dd (detail description) these are wrapped inside
x    => https://www.w3schools.com/tags/tag_dd.asp#:~:text=The%20tag%20is%20used,%2C%20links%2C%20lists%2C%20etc.
=> heading will be renderd ad dt
  <Heading as='dt'></Heading>
  ==============================================================
  getting   trailers and showing on the details page
  =>https://api.rawg.io/docs/#operation/games_movies_read
  => /games/{id}/movies
   returns the list of triler with diffrent quality
   so first get the data then print the consloel and decide the which traller to be taken
     response obejct
   {count: 8, next: null, previous: null, results: Array(8)}
count
: 
8
next
: 
null
previous
: 
null
results:
[
    {
        "id": 16228,
        "name": "GTA Online: Smuggler's Run Trailer",
        "preview": "https://media.rawg.io/media/movies/d8a/d8a61a3a12e52114afdbc28f2c813f5c.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256693661/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256693661/movie_max.mp4"
        }
    },
    {
        "id": 16227,
        "name": "GTA Online: Gunrunning Trailer",
        "preview": "https://media.rawg.io/media/movies/80c/80c2eeb2478d31291dfb5a5fd5a45f2e.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256686767/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256686767/movie_max.mp4"
        }
    },
    {
        "id": 16226,
        "name": "GTA Online: Tiny Racers Trailer",
        "preview": "https://media.rawg.io/media/movies/7c9/7c9f84f3ec31106944a04128287fdd6a.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256683844/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256683844/movie_max.mp4"
        }
    },
    {
        "id": 16225,
        "name": "GTA Online Cunning Stunts: Special Vehicle Circuit Trailer",
        "preview": "https://media.rawg.io/media/movies/d6e/d6e1deb16c4275e8f5769528780e03ac.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256681415/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256681415/movie_max.mp4"
        }
    },
    {
        "id": 16224,
        "name": "GTA Online: Import/Export",
        "preview": "https://media.rawg.io/media/movies/1c1/1c1429a6557185326c1d8c03a6f325c0.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256676519/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256676519/movie_max.mp4"
        }
    },
    {
        "id": 16223,
        "name": "GTA Online: Deadline",
        "preview": "https://media.rawg.io/media/movies/f80/f8051b0eb479fa1785c1e04c8e54e322.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256674210/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256674210/movie_max.mp4"
        }
    },
    {
        "id": 16222,
        "name": "GTA Online: Bikers Trailer",
        "preview": "https://media.rawg.io/media/movies/955/9556607dec02bf324c87aa33bba2ed8e.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256672028/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256672028/movie_max.mp4"
        }
    },
    {
        "id": 16221,
        "name": "GTA Online: Cunning Stunts Trailer",
        "preview": "https://media.rawg.io/media/movies/66e/66e78864cf57faa2a52cfab4eb6830a4.jpg",
        "data": {
            "480": "https://steamcdn-a.akamaihd.net/steam/apps/256666646/movie480.mp4",
            "max": "https://steamcdn-a.akamaihd.net/steam/apps/256666646/movie_max.mp4"
        }
    }
]

========================================================
  adding screnshot
  https://api.rawg.io/docs/#operation/games_screenshots_list
  https://api.rawg.io/api/games/{game_pk}/screenshots
  https://api.rawg.io/api/games/4291/movies?key=dd1c596d6ab24bb6909f27f7966dd259
  <SimpleGrid columns={{ base: 1, md: 2 }} spacing={2}>
      {data?.results.map((screenshot) => (
        <Image key={screenshot.id} src={screenshot.image}></Image>
      ))}
    </SimpleGrid>

    => here for base mobile deviece 1 column , for large devices like laptop 2 columns per row